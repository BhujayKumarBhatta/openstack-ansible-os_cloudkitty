---
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Verbosity Options
debug: False

# Set the package install state for distribution and pip packages
# Options are 'present' and 'latest'
cloudkitty_package_state: "latest"
cloudkitty_pip_package_state: "latest"

## Toggle developer mode
cloudkitty_developer_mode: false

## The git source/branch
cloudkitty_git_repo: https://git.openstack.org/openstack/cloudkitty
cloudkitty_git_install_branch: stable/pike

## The packages to build from source (used in developer mode)
cloudkitty_developer_constraints:
  - "git+{{ cloudkitty_git_repo }}@{{ cloudkitty_git_install_branch }}#egg=cloudkitty"

# Name of the virtual env to deploy into
cloudkitty_venv_tag: untagged
cloudkitty_bin: "/openstack/venvs/cloudkitty-{{ cloudkitty_venv_tag }}/bin"

# venv_download, even when true, will use the fallback method of building the
# venv from scratch if the venv download fails.
cloudkitty_venv_download: "{{ not cloudkitty_developer_mode | bool }}"
# URL of the pre-built virtualenv
cloudkitty_venv_download_url: http://127.0.0.1/venvs/untagged/ubuntu/cloudkitty.tgz

## System info
cloudkitty_system_user_name: cloudkitty
cloudkitty_system_group_name: cloudkitty
cloudkitty_system_shell: /bin/false
cloudkitty_system_comment: cloudkitty system user
cloudkitty_system_user_home: "/var/lib/{{ cloudkitty_system_user_name }}"

## DB info
cloudkitty_database_name: cloudkitty
cloudkitty_database_user: cloudkitty
cloudkitty_db_type: "mysql+pymysql"
cloudkitty_db_address: localhost
cloudkitty_connection_string: "{{ cloudkitty_db_type }}://{{ cloudkitty_database_user }}:{{ cloudkitty_container_db_password }}@{{ cloudkitty_db_address }}/{{ cloudkitty_database_name }}?charset=utf8"

## RabbitMQ info
cloudkitty_rabbitmq_userid: cloudkitty
cloudkitty_rabbitmq_vhost: /cloudkitty
cloudkitty_rabbitmq_servers: 127.0.0.1
cloudkitty_rabbitmq_port: 5672
cloudkitty_rabbitmq_use_ssl: False

## Apache setup
cloudkitty_apache_log_level: info
cloudkitty_apache_servertokens: "Prod"
cloudkitty_apache_serversignature: "Off"
cloudkitty_wsgi_threads: 10
cloudkitty_wsgi_processes_max: 2
cloudkitty_wsgi_processes: "{{ [[ansible_processor_vcpus|default(1), 1] | max * 2, cloudkitty_wsgi_processes_max] | min }}"

#Cloudkitty services info
cloudkitty_role_name: admin

## Service Type and Data
cloudkitty_service_region: RegionOne
cloudkitty_service_endpoint_type: internalURL
cloudkitty_service_name: cloudkitty
cloudkitty_service_port: 8089
cloudkitty_service_proto: http
cloudkitty_service_type: rating
cloudkitty_service_description: "Rating"
cloudkitty_service_project_domain_id: default
cloudkitty_service_user_domain_id: default
cloudkitty_service_user_name: cloudkitty
cloudkitty_keystone_auth_plugin: "{{ cloudkitty_keystone_auth_type }}"
cloudkitty_keystone_auth_type: v3password
cloudkitty_service_tenant_name: service
cloudkitty_service_project_name: service
cloudkitty_service_publicuri: "{{ cloudkitty_service_proto }}://{{ external_lb_vip_address }}:{{ cloudkitty_service_port }}"
cloudkitty_service_publicurl: "{{ cloudkitty_service_publicuri }}"
cloudkitty_service_internaluri: "{{ cloudkitty_service_proto }}://{{ internal_lb_vip_address }}:{{ cloudkitty_service_port }}"
cloudkitty_service_internalurl: "{{ cloudkitty_service_internaluri }}"
cloudkitty_service_adminuri: "{{ cloudkitty_service_proto }}://{{ internal_lb_vip_address }}:{{ cloudkitty_service_port }}"
cloudkitty_service_adminurl: "{{ cloudkitty_service_adminuri }}"

cloudkitty_service_in_ldap: false

# cloudkitty packages that must be installed before anything else
cloudkitty_requires_pip_packages:
  - virtualenv
  - virtualenv-tools
  - python-keystoneclient
  - httplib2

# Common pip packages
cloudkitty_pip_packages:
  - cloudkitty
  - cryptography
  - msgpack-python
  - PyMySQL
  - python-memcached

cloudkitty_processor_init_overrides: {}

cloudkitty_services:
  cloudkitty-processor:
    group: cloudkitty_api
    service_name: cloudkitty-processor
    init_config_overrides: "{{ cloudkitty_processor_init_overrides }}"

cloudkitty_required_secrets:
  - memcached_encryption_key
  - cloudkitty_container_db_password
  - cloudkitty_rabbitmq_password
  - cloudkitty_service_password

install_test_packages: False

cloudkitty_role_project_group: cloudkitty_all

## Tunable overrides
cloudkitty_policy_overrides: {}
cloudkitty_cloudkitty_conf_overrides: {}
cloudkitty_api_paste_ini_overrides: {}

cloudkitty_notification_topics: notifications

cloudkitty_collector: gnocchi
cloudkitty_output_backend: cloudkitty.backend.file.FileBackend
cloudkitty_output_pipeline: osrf
cloudkitty_output_basepath: /var/cloudkitty/reports
